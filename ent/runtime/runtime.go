// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"net/url"
	"time"

	"github.com/techbloghub/server/ent/company"
	"github.com/techbloghub/server/ent/schema"
	"github.com/techbloghub/server/ent/tag"

	"entgo.io/ent/schema/field"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	companyMixin := schema.Company{}.Mixin()
	companyMixinHooks1 := companyMixin[1].Hooks()
	company.Hooks[0] = companyMixinHooks1[0]
	companyMixinInters1 := companyMixin[1].Interceptors()
	company.Interceptors[0] = companyMixinInters1[0]
	companyMixinFields0 := companyMixin[0].Fields()
	_ = companyMixinFields0
	companyFields := schema.Company{}.Fields()
	_ = companyFields
	// companyDescCreateTime is the schema descriptor for create_time field.
	companyDescCreateTime := companyMixinFields0[0].Descriptor()
	// company.DefaultCreateTime holds the default value on creation for the create_time field.
	company.DefaultCreateTime = companyDescCreateTime.Default.(func() time.Time)
	// companyDescUpdateTime is the schema descriptor for update_time field.
	companyDescUpdateTime := companyMixinFields0[1].Descriptor()
	// company.DefaultUpdateTime holds the default value on creation for the update_time field.
	company.DefaultUpdateTime = companyDescUpdateTime.Default.(func() time.Time)
	// company.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	company.UpdateDefaultUpdateTime = companyDescUpdateTime.UpdateDefault.(func() time.Time)
	// companyDescLogoURL is the schema descriptor for logo_url field.
	companyDescLogoURL := companyFields[1].Descriptor()
	company.ValueScanner.LogoURL = companyDescLogoURL.ValueScanner.(field.TypeValueScanner[*url.URL])
	// companyDescBlogURL is the schema descriptor for blog_url field.
	companyDescBlogURL := companyFields[2].Descriptor()
	company.ValueScanner.BlogURL = companyDescBlogURL.ValueScanner.(field.TypeValueScanner[*url.URL])
	// companyDescRssURL is the schema descriptor for rss_url field.
	companyDescRssURL := companyFields[3].Descriptor()
	company.ValueScanner.RssURL = companyDescRssURL.ValueScanner.(field.TypeValueScanner[*url.URL])
	tagMixin := schema.Tag{}.Mixin()
	tagMixinHooks1 := tagMixin[1].Hooks()
	tag.Hooks[0] = tagMixinHooks1[0]
	tagMixinInters1 := tagMixin[1].Interceptors()
	tag.Interceptors[0] = tagMixinInters1[0]
	tagMixinFields0 := tagMixin[0].Fields()
	_ = tagMixinFields0
	tagFields := schema.Tag{}.Fields()
	_ = tagFields
	// tagDescCreateTime is the schema descriptor for create_time field.
	tagDescCreateTime := tagMixinFields0[0].Descriptor()
	// tag.DefaultCreateTime holds the default value on creation for the create_time field.
	tag.DefaultCreateTime = tagDescCreateTime.Default.(func() time.Time)
	// tagDescUpdateTime is the schema descriptor for update_time field.
	tagDescUpdateTime := tagMixinFields0[1].Descriptor()
	// tag.DefaultUpdateTime holds the default value on creation for the update_time field.
	tag.DefaultUpdateTime = tagDescUpdateTime.Default.(func() time.Time)
	// tag.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	tag.UpdateDefaultUpdateTime = tagDescUpdateTime.UpdateDefault.(func() time.Time)
	// tagDescName is the schema descriptor for name field.
	tagDescName := tagFields[0].Descriptor()
	// tag.NameValidator is a validator for the "name" field. It is called by the builders before save.
	tag.NameValidator = tagDescName.Validators[0].(func(string) error)
}

const (
	Version = "v0.14.1"                                         // Version of ent codegen.
	Sum     = "h1:fUERL506Pqr92EPHJqr8EYxbPioflJo6PudkrEA8a/s=" // Sum of ent codegen.
)

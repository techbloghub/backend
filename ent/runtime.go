// Code generated by ent, DO NOT EDIT.

package ent

import (
	"net/url"
	"time"

	"github.com/techbloghub/server/ent/company"
	"github.com/techbloghub/server/ent/schema"

	"entgo.io/ent/schema/field"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	companyMixin := schema.Company{}.Mixin()
	companyMixinFields0 := companyMixin[0].Fields()
	_ = companyMixinFields0
	companyFields := schema.Company{}.Fields()
	_ = companyFields
	// companyDescCreateTime is the schema descriptor for create_time field.
	companyDescCreateTime := companyMixinFields0[0].Descriptor()
	// company.DefaultCreateTime holds the default value on creation for the create_time field.
	company.DefaultCreateTime = companyDescCreateTime.Default.(func() time.Time)
	// companyDescUpdateTime is the schema descriptor for update_time field.
	companyDescUpdateTime := companyMixinFields0[1].Descriptor()
	// company.DefaultUpdateTime holds the default value on creation for the update_time field.
	company.DefaultUpdateTime = companyDescUpdateTime.Default.(func() time.Time)
	// company.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	company.UpdateDefaultUpdateTime = companyDescUpdateTime.UpdateDefault.(func() time.Time)
	// companyDescLogoURL is the schema descriptor for logo_url field.
	companyDescLogoURL := companyFields[1].Descriptor()
	company.ValueScanner.LogoURL = companyDescLogoURL.ValueScanner.(field.TypeValueScanner[*url.URL])
	// companyDescBlogURL is the schema descriptor for blog_url field.
	companyDescBlogURL := companyFields[2].Descriptor()
	company.ValueScanner.BlogURL = companyDescBlogURL.ValueScanner.(field.TypeValueScanner[*url.URL])
	// companyDescRssURL is the schema descriptor for rss_url field.
	companyDescRssURL := companyFields[3].Descriptor()
	company.ValueScanner.RssURL = companyDescRssURL.ValueScanner.(field.TypeValueScanner[*url.URL])
}
